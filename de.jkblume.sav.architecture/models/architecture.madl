import "platform:/plugin/org.qualitune.smags.architecture.dsl/resources/StandardTypes.madl";
import "../../SmagRE/models/AdaptationArchitecture.madl";
import "../../SmagRE/models/CommonLib.madl";
import "../../de.jkblume.sav.sensorml/models/sensorml.madl";

namespace "de.jkblume.sav.architecture";

meta architecture SavMetaArchitecture{
	sensor units:

	type libraries:
	
	port types:
		
	port type IProcess {
		parameter smlConfiguration : AbstractProcess;
		IOPropertyList execute(IOPropertyList value);
	}
	
	port type IOrchestratorProcess extends IProcess {
		requires IProcess[0 to *];
	}
	
	port type ISensor {
		parameter smlConfiguration : AbstractPhysicalProcess;
		parameter lastEvent : Event;
		
		void start();
		void stop();
		Boolean initialize();
		Boolean isRunning();
		String getId();
		IOPropertyList retrieveValues();
		
		requires IProcess;
	}
			
	port type IReasoner extends IProcess {
		void buildClassifier();
	}
	
	port type ISupervisedLearning extends IReasoner {
		void startGesture(Category category);
		void stopGesture(Category category);
		void teachCurrentState(Category category);
		void train();
	}
	
	port type IVisualisationStrategy {
		void visualizeEvent(ISensor source, Event event);
		void addSensor(ISensor sensor);
		void removeSensor(ISensor sensor);
	}
		
	component types:
		
	component type TechnicalSensor {
		provides ISensor;
	}
	
	
	component type LogicalSensor {
		provides ISensor;
		requires ISensor[0 to *];
	}
	
	component type Reasoner {
		provides IReasoner;
		requires ISensor[0 to *];
	}
	
	component type Visualizer {
		requires ISensor[0 to *];
		provides IVisualisationStrategy;
	}
		
	sensor types:

}